# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-05 01:42
from __future__ import unicode_literals

from django.db import migrations

def create_contributor_groups(apps, schema_editor):
    """
    Add the three permission level groups related to contributors.
    """
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    students, _ = Group.objects.get_or_create(name='students')
    students.permissions = [
        Permission.objects.get(codename='change_options'),
    ]
    students.save()

    course_contributors, _ = Group.objects.get_or_create(name='course_contributors')
    course_contributors.permissions = [
        Permission.objects.get(codename='add_course'),
        Permission.objects.get(codename='change_course'),
        Permission.objects.get(codename='delete_course'),
        Permission.objects.get(codename='add_courselink'),
        Permission.objects.get(codename='change_courselink'),
        Permission.objects.get(codename='delete_courselink'),
    ]
    course_contributors.save()

    # In case of semester-level specific permissions in the future
    semester_contributors, _ = Group.objects.get_or_create(name='semester_contributors')
    semester_contributors.permissions = []
    semester_contributors.save()

    # In case of main profile-level specific permissions in the future
    mainprofile_contributors, _ = Group.objects.get_or_create(name='mainprofile_contributors')
    mainprofile_contributors.permissions = []
    mainprofile_contributors.save()

    studyprogram_contributors, _ = Group.objects.get_or_create(name='studyprogram_contributors')
    studyprogram_contributors.permissions = [
        Permission.objects.get(codename='change_studyprogram'),
        Permission.objects.get(codename='add_mainprofile'),
        Permission.objects.get(codename='delete_mainprofile'),
        Permission.objects.get(codename='add_resourcelinklist'),
        Permission.objects.get(codename='change_resourcelinklist'),
        Permission.objects.get(codename='add_customlinkcategory'),
        Permission.objects.get(codename='delete_resourcelinklist'),
        Permission.objects.get(codename='add_resourcelink'),
        Permission.objects.get(codename='change_resourcelink'),
        Permission.objects.get(codename='delete_resourcelink'),
        Permission.objects.get(codename='change_mainprofile'),
        Permission.objects.get(codename='add_mainprofile'),
        Permission.objects.get(codename='add_semester'),
        Permission.objects.get(codename='change_semester'),
        Permission.objects.get(codename='delete_semester')
    ]
    studyprogram_contributors.save()

def set_admin_theme(apps, schema_editor):
    """
    Custom styling of the admin site using the admin_interface app.
    Done by editing the default Theme model created by the app at initialization.
    """
    Theme = apps.get_model('admin_interface', 'Theme')

    # Getting the default theme
    kokekunster_theme, _ = Theme.objects.get_or_create(pk=1)

    # Used colors
    white = '#FFFFFF'
    dark_grey = '#555555'
    darker_grey = '#333333'
    grey = '#7A7A7A'
    bright_grey = '#C0C0C0' # silver
    red = '#BA2121'
    dark_red = '#A41515'

    # Editing the theme
    kokekunster_theme.name = 'Komfyren'

    kokekunster_theme.title = 'Komfyren'

    kokekunster_theme.logo = '/static/img/kokekunster_logo.svg'

    kokekunster_theme.css_header_background_color = darker_grey
    kokekunster_theme.css_header_title_color = white
    kokekunster_theme.css_header_text_color = bright_grey
    kokekunster_theme.css_header_link_color = white
    kokekunster_theme.css_header_link_hover_color = bright_grey

    kokekunster_theme.css_module_background_color = grey
    kokekunster_theme.css_module_text_color = white
    kokekunster_theme.css_module_link_color = white
    kokekunster_theme.css_module_link_hover_color = bright_grey
    kokekunster_theme.css_module_rounded_corners = False

    kokekunster_theme.css_generic_link_color = dark_grey
    kokekunster_theme.css_generic_link_hover_color = bright_grey

    kokekunster_theme.css_save_button_background_color = dark_grey
    kokekunster_theme.css_save_button_background_hover_color = grey
    kokekunster_theme.css_save_button_text_color = white

    kokekunster_theme.css_delete_button_background_color = red
    kokekunster_theme.css_delete_button_background_hover_color = dark_red
    kokekunster_theme.css_delete_button_text_color = white

    kokekunster_theme.css = '#branding h1 span {' \
                                    'font-size: 30px;' \
                                    'position: relative; ' \
                                    'top: 0.5em; ' \
                                    'font-weight: 300;' \
                            '}' \
                            '.login #branding h1 span {' \
                                    'position: absolute;' \
                                    'right: 2.8em;' \
                                    'top: 1.5em;' \
                            '}' \



    # Done with the changes, thus writing the changes to the database
    kokekunster_theme.save()

def create_semesterpage_objects(apps, schema_editor):
    StudyProgram = apps.get_model('semesterpage', 'StudyProgram')
    Semester = apps.get_model('semesterpage', 'Semester')

    default_study_program = StudyProgram.objects.create(
        pk=1,
        full_name='Fysikk og matematikk',
        display_name='Fysmat',
        has_archive=True,
        published=True
    )
    default_semester = Semester.objects.create(
        pk=1,
        number=1,
        study_program=default_study_program,
        main_profile=None,
        published=True
    )

def set_site(apps, schema_editor):
    Site = apps.get_model('sites', 'Site')
    default_site, _ = Site.objects.get_or_create(pk=1)
    default_site.name = 'localhost:8000'
    default_site.domain = 'localhost:8000'
    default_site.save()

class Migration(migrations.Migration):

    dependencies = [
        ('semesterpage', '0002_auto_20160805_0243'),
        ('admin_interface', '__first__'),
        ('auth', '__first__'),
        ('sites', '__first__'),
    ]

    operations = [
        migrations.RunPython(create_contributor_groups),
        migrations.RunPython(set_admin_theme),
        migrations.RunPython(create_semesterpage_objects),
        migrations.RunPython(set_site),
    ]
